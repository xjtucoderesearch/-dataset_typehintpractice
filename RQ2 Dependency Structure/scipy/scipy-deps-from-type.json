{
    "@schemaVersion": 1.0,
    "name": "scipy-deps-from-type",
    "variables": [
        "scipy/__init__.py",
        "scipy/_build_utils/__init__.py",
        "scipy/_build_utils/_fortran.py",
        "scipy/_build_utils/compiler_helper.py",
        "scipy/_build_utils/setup.py",
        "scipy/_build_utils/system_info.py",
        "scipy/_build_utils/tempita.py",
        "scipy/_build_utils/tests/__init__.py",
        "scipy/_build_utils/tests/test_scipy_version.py",
        "scipy/_distributor_init.py",
        "scipy/_lib/__init__.py",
        "scipy/_lib/_boost_utils.py",
        "scipy/_lib/_bunch.py",
        "scipy/_lib/_ccallback.py",
        "scipy/_lib/_disjoint_set.py",
        "scipy/_lib/_gcutils.py",
        "scipy/_lib/_pep440.py",
        "scipy/_lib/_testutils.py",
        "scipy/_lib/_threadsafety.py",
        "scipy/_lib/_tmpdirs.py",
        "scipy/_lib/_uarray/__init__.py",
        "scipy/_lib/_uarray/_backend.py",
        "scipy/_lib/_uarray/setup.py",
        "scipy/_lib/_util.py",
        "scipy/_lib/decorator.py",
        "scipy/_lib/deprecation.py",
        "scipy/_lib/doccer.py",
        "scipy/_lib/setup.py",
        "scipy/_lib/tests/__init__.py",
        "scipy/_lib/tests/test__gcutils.py",
        "scipy/_lib/tests/test__pep440.py",
        "scipy/_lib/tests/test__testutils.py",
        "scipy/_lib/tests/test__threadsafety.py",
        "scipy/_lib/tests/test__util.py",
        "scipy/_lib/tests/test_bunch.py",
        "scipy/_lib/tests/test_ccallback.py",
        "scipy/_lib/tests/test_deprecation.py",
        "scipy/_lib/tests/test_import_cycles.py",
        "scipy/_lib/tests/test_tmpdirs.py",
        "scipy/_lib/tests/test_warnings.py",
        "scipy/_lib/uarray.py",
        "scipy/cluster/__init__.py",
        "scipy/cluster/hierarchy.py",
        "scipy/cluster/setup.py",
        "scipy/cluster/tests/__init__.py",
        "scipy/cluster/tests/hierarchy_test_data.py",
        "scipy/cluster/tests/test_disjoint_set.py",
        "scipy/cluster/tests/test_hierarchy.py",
        "scipy/cluster/tests/test_vq.py",
        "scipy/cluster/vq.py",
        "scipy/conftest.py",
        "scipy/constants/__init__.py",
        "scipy/constants/codata.py",
        "scipy/constants/constants.py",
        "scipy/constants/setup.py",
        "scipy/constants/tests/__init__.py",
        "scipy/constants/tests/test_codata.py",
        "scipy/constants/tests/test_constants.py",
        "scipy/fft/__init__.py",
        "scipy/fft/_backend.py",
        "scipy/fft/_basic.py",
        "scipy/fft/_debug_backends.py",
        "scipy/fft/_fftlog.py",
        "scipy/fft/_helper.py",
        "scipy/fft/_pocketfft/__init__.py",
        "scipy/fft/_pocketfft/basic.py",
        "scipy/fft/_pocketfft/helper.py",
        "scipy/fft/_pocketfft/realtransforms.py",
        "scipy/fft/_pocketfft/setup.py",
        "scipy/fft/_pocketfft/tests/__init__.py",
        "scipy/fft/_pocketfft/tests/test_basic.py",
        "scipy/fft/_pocketfft/tests/test_real_transforms.py",
        "scipy/fft/_realtransforms.py",
        "scipy/fft/setup.py",
        "scipy/fft/tests/mock_backend.py",
        "scipy/fft/tests/test_backend.py",
        "scipy/fft/tests/test_fft_function.py",
        "scipy/fft/tests/test_fftlog.py",
        "scipy/fft/tests/test_helper.py",
        "scipy/fft/tests/test_multithreading.py",
        "scipy/fft/tests/test_numpy.py",
        "scipy/fft/tests/test_real_transforms.py",
        "scipy/fftpack/__init__.py",
        "scipy/fftpack/basic.py",
        "scipy/fftpack/helper.py",
        "scipy/fftpack/pseudo_diffs.py",
        "scipy/fftpack/realtransforms.py",
        "scipy/fftpack/setup.py",
        "scipy/fftpack/tests/__init__.py",
        "scipy/fftpack/tests/gen_fftw_ref.py",
        "scipy/fftpack/tests/gendata.py",
        "scipy/fftpack/tests/test_basic.py",
        "scipy/fftpack/tests/test_helper.py",
        "scipy/fftpack/tests/test_import.py",
        "scipy/fftpack/tests/test_pseudo_diffs.py",
        "scipy/fftpack/tests/test_real_transforms.py",
        "scipy/integrate/__init__.py",
        "scipy/integrate/_bvp.py",
        "scipy/integrate/_ivp/__init__.py",
        "scipy/integrate/_ivp/base.py",
        "scipy/integrate/_ivp/bdf.py",
        "scipy/integrate/_ivp/common.py",
        "scipy/integrate/_ivp/dop853_coefficients.py",
        "scipy/integrate/_ivp/ivp.py",
        "scipy/integrate/_ivp/lsoda.py",
        "scipy/integrate/_ivp/radau.py",
        "scipy/integrate/_ivp/rk.py",
        "scipy/integrate/_ivp/setup.py",
        "scipy/integrate/_ivp/tests/test_ivp.py",
        "scipy/integrate/_ivp/tests/test_rk.py",
        "scipy/integrate/_ode.py",
        "scipy/integrate/_quad_vec.py",
        "scipy/integrate/_quadrature.py",
        "scipy/integrate/odepack.py",
        "scipy/integrate/quadpack.py",
        "scipy/integrate/setup.py",
        "scipy/integrate/tests/__init__.py",
        "scipy/integrate/tests/test__quad_vec.py",
        "scipy/integrate/tests/test_banded_ode_solvers.py",
        "scipy/integrate/tests/test_bvp.py",
        "scipy/integrate/tests/test_integrate.py",
        "scipy/integrate/tests/test_odeint_jac.py",
        "scipy/integrate/tests/test_quadpack.py",
        "scipy/integrate/tests/test_quadrature.py",
        "scipy/interpolate/__init__.py",
        "scipy/interpolate/_bsplines.py",
        "scipy/interpolate/_cubic.py",
        "scipy/interpolate/_fitpack_impl.py",
        "scipy/interpolate/_pade.py",
        "scipy/interpolate/_rbfinterp.py",
        "scipy/interpolate/_rbfinterp_pythran.py",
        "scipy/interpolate/fitpack.py",
        "scipy/interpolate/fitpack2.py",
        "scipy/interpolate/interpnd_info.py",
        "scipy/interpolate/interpolate.py",
        "scipy/interpolate/ndgriddata.py",
        "scipy/interpolate/polyint.py",
        "scipy/interpolate/rbf.py",
        "scipy/interpolate/setup.py",
        "scipy/interpolate/tests/__init__.py",
        "scipy/interpolate/tests/test_bsplines.py",
        "scipy/interpolate/tests/test_fitpack.py",
        "scipy/interpolate/tests/test_fitpack2.py",
        "scipy/interpolate/tests/test_gil.py",
        "scipy/interpolate/tests/test_interpnd.py",
        "scipy/interpolate/tests/test_interpolate.py",
        "scipy/interpolate/tests/test_ndgriddata.py",
        "scipy/interpolate/tests/test_pade.py",
        "scipy/interpolate/tests/test_polyint.py",
        "scipy/interpolate/tests/test_rbf.py",
        "scipy/interpolate/tests/test_rbfinterp.py",
        "scipy/interpolate/tests/test_regression.py",
        "scipy/io/__init__.py",
        "scipy/io/_fortran.py",
        "scipy/io/arff/__init__.py",
        "scipy/io/arff/arffread.py",
        "scipy/io/arff/setup.py",
        "scipy/io/arff/tests/__init__.py",
        "scipy/io/arff/tests/test_arffread.py",
        "scipy/io/harwell_boeing/__init__.py",
        "scipy/io/harwell_boeing/_fortran_format_parser.py",
        "scipy/io/harwell_boeing/hb.py",
        "scipy/io/harwell_boeing/setup.py",
        "scipy/io/harwell_boeing/tests/__init__.py",
        "scipy/io/harwell_boeing/tests/test_fortran_format.py",
        "scipy/io/harwell_boeing/tests/test_hb.py",
        "scipy/io/idl.py",
        "scipy/io/matlab/__init__.py",
        "scipy/io/matlab/byteordercodes.py",
        "scipy/io/matlab/mio.py",
        "scipy/io/matlab/mio4.py",
        "scipy/io/matlab/mio5.py",
        "scipy/io/matlab/mio5_params.py",
        "scipy/io/matlab/miobase.py",
        "scipy/io/matlab/setup.py",
        "scipy/io/matlab/tests/__init__.py",
        "scipy/io/matlab/tests/test_byteordercodes.py",
        "scipy/io/matlab/tests/test_mio.py",
        "scipy/io/matlab/tests/test_mio5_utils.py",
        "scipy/io/matlab/tests/test_mio_funcs.py",
        "scipy/io/matlab/tests/test_mio_utils.py",
        "scipy/io/matlab/tests/test_miobase.py",
        "scipy/io/matlab/tests/test_pathological.py",
        "scipy/io/matlab/tests/test_streams.py",
        "scipy/io/mmio.py",
        "scipy/io/netcdf.py",
        "scipy/io/setup.py",
        "scipy/io/tests/__init__.py",
        "scipy/io/tests/test_fortran.py",
        "scipy/io/tests/test_idl.py",
        "scipy/io/tests/test_mmio.py",
        "scipy/io/tests/test_netcdf.py",
        "scipy/io/tests/test_paths.py",
        "scipy/io/tests/test_wavfile.py",
        "scipy/io/wavfile.py",
        "scipy/linalg/__init__.py",
        "scipy/linalg/_cython_signature_generator.py",
        "scipy/linalg/_decomp_cossin.py",
        "scipy/linalg/_decomp_ldl.py",
        "scipy/linalg/_decomp_polar.py",
        "scipy/linalg/_decomp_qz.py",
        "scipy/linalg/_expm_frechet.py",
        "scipy/linalg/_generate_pyx.py",
        "scipy/linalg/_interpolative_backend.py",
        "scipy/linalg/_matfuncs_inv_ssq.py",
        "scipy/linalg/_matfuncs_sqrtm.py",
        "scipy/linalg/_procrustes.py",
        "scipy/linalg/_sketches.py",
        "scipy/linalg/_solvers.py",
        "scipy/linalg/_testutils.py",
        "scipy/linalg/basic.py",
        "scipy/linalg/blas.py",
        "scipy/linalg/decomp.py",
        "scipy/linalg/decomp_cholesky.py",
        "scipy/linalg/decomp_lu.py",
        "scipy/linalg/decomp_qr.py",
        "scipy/linalg/decomp_schur.py",
        "scipy/linalg/decomp_svd.py",
        "scipy/linalg/flinalg.py",
        "scipy/linalg/interpolative.py",
        "scipy/linalg/lapack.py",
        "scipy/linalg/matfuncs.py",
        "scipy/linalg/misc.py",
        "scipy/linalg/setup.py",
        "scipy/linalg/special_matrices.py",
        "scipy/linalg/tests/__init__.py",
        "scipy/linalg/tests/test_basic.py",
        "scipy/linalg/tests/test_blas.py",
        "scipy/linalg/tests/test_build.py",
        "scipy/linalg/tests/test_cython_blas.py",
        "scipy/linalg/tests/test_cython_lapack.py",
        "scipy/linalg/tests/test_decomp.py",
        "scipy/linalg/tests/test_decomp_cholesky.py",
        "scipy/linalg/tests/test_decomp_cossin.py",
        "scipy/linalg/tests/test_decomp_ldl.py",
        "scipy/linalg/tests/test_decomp_polar.py",
        "scipy/linalg/tests/test_decomp_update.py",
        "scipy/linalg/tests/test_fblas.py",
        "scipy/linalg/tests/test_interpolative.py",
        "scipy/linalg/tests/test_lapack.py",
        "scipy/linalg/tests/test_matfuncs.py",
        "scipy/linalg/tests/test_matmul_toeplitz.py",
        "scipy/linalg/tests/test_misc.py",
        "scipy/linalg/tests/test_procrustes.py",
        "scipy/linalg/tests/test_sketches.py",
        "scipy/linalg/tests/test_solve_toeplitz.py",
        "scipy/linalg/tests/test_solvers.py",
        "scipy/linalg/tests/test_special_matrices.py",
        "scipy/misc/__init__.py",
        "scipy/misc/common.py",
        "scipy/misc/doccer.py",
        "scipy/misc/setup.py",
        "scipy/misc/tests/__init__.py",
        "scipy/misc/tests/test_common.py",
        "scipy/misc/tests/test_doccer.py",
        "scipy/ndimage/__init__.py",
        "scipy/ndimage/_ni_docstrings.py",
        "scipy/ndimage/_ni_support.py",
        "scipy/ndimage/filters.py",
        "scipy/ndimage/fourier.py",
        "scipy/ndimage/interpolation.py",
        "scipy/ndimage/measurements.py",
        "scipy/ndimage/morphology.py",
        "scipy/ndimage/setup.py",
        "scipy/ndimage/tests/__init__.py",
        "scipy/ndimage/tests/test_c_api.py",
        "scipy/ndimage/tests/test_datatypes.py",
        "scipy/ndimage/tests/test_filters.py",
        "scipy/ndimage/tests/test_fourier.py",
        "scipy/ndimage/tests/test_interpolation.py",
        "scipy/ndimage/tests/test_measurements.py",
        "scipy/ndimage/tests/test_morphology.py",
        "scipy/ndimage/tests/test_splines.py",
        "scipy/ndimage/utils/generate_label_testvectors.py",
        "scipy/odr/__init__.py",
        "scipy/odr/_add_newdocs.py",
        "scipy/odr/models.py",
        "scipy/odr/odrpack.py",
        "scipy/odr/setup.py",
        "scipy/odr/tests/__init__.py",
        "scipy/odr/tests/test_odr.py",
        "scipy/optimize/__init__.py",
        "scipy/optimize/_basinhopping.py",
        "scipy/optimize/_constraints.py",
        "scipy/optimize/_differentiable_functions.py",
        "scipy/optimize/_differentialevolution.py",
        "scipy/optimize/_dual_annealing.py",
        "scipy/optimize/_group_columns.py",
        "scipy/optimize/_hessian_update_strategy.py",
        "scipy/optimize/_highs/__init__.py",
        "scipy/optimize/_highs/cython/__init__.py",
        "scipy/optimize/_highs/cython/src/__init__.py",
        "scipy/optimize/_highs/setup.py",
        "scipy/optimize/_linprog.py",
        "scipy/optimize/_linprog_doc.py",
        "scipy/optimize/_linprog_highs.py",
        "scipy/optimize/_linprog_ip.py",
        "scipy/optimize/_linprog_rs.py",
        "scipy/optimize/_linprog_simplex.py",
        "scipy/optimize/_linprog_util.py",
        "scipy/optimize/_lsap.py",
        "scipy/optimize/_lsq/__init__.py",
        "scipy/optimize/_lsq/bvls.py",
        "scipy/optimize/_lsq/common.py",
        "scipy/optimize/_lsq/dogbox.py",
        "scipy/optimize/_lsq/least_squares.py",
        "scipy/optimize/_lsq/lsq_linear.py",
        "scipy/optimize/_lsq/setup.py",
        "scipy/optimize/_lsq/trf.py",
        "scipy/optimize/_lsq/trf_linear.py",
        "scipy/optimize/_minimize.py",
        "scipy/optimize/_nnls.py",
        "scipy/optimize/_numdiff.py",
        "scipy/optimize/_qap.py",
        "scipy/optimize/_remove_redundancy.py",
        "scipy/optimize/_root.py",
        "scipy/optimize/_root_scalar.py",
        "scipy/optimize/_shgo.py",
        "scipy/optimize/_shgo_lib/__init__.py",
        "scipy/optimize/_shgo_lib/triangulation.py",
        "scipy/optimize/_spectral.py",
        "scipy/optimize/_trlib/__init__.py",
        "scipy/optimize/_trlib/setup.py",
        "scipy/optimize/_trustregion.py",
        "scipy/optimize/_trustregion_constr/__init__.py",
        "scipy/optimize/_trustregion_constr/canonical_constraint.py",
        "scipy/optimize/_trustregion_constr/equality_constrained_sqp.py",
        "scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py",
        "scipy/optimize/_trustregion_constr/projections.py",
        "scipy/optimize/_trustregion_constr/qp_subproblem.py",
        "scipy/optimize/_trustregion_constr/report.py",
        "scipy/optimize/_trustregion_constr/setup.py",
        "scipy/optimize/_trustregion_constr/tests/__init__.py",
        "scipy/optimize/_trustregion_constr/tests/test_canonical_constraint.py",
        "scipy/optimize/_trustregion_constr/tests/test_projections.py",
        "scipy/optimize/_trustregion_constr/tests/test_qp_subproblem.py",
        "scipy/optimize/_trustregion_constr/tests/test_report.py",
        "scipy/optimize/_trustregion_constr/tr_interior_point.py",
        "scipy/optimize/_trustregion_dogleg.py",
        "scipy/optimize/_trustregion_exact.py",
        "scipy/optimize/_trustregion_krylov.py",
        "scipy/optimize/_trustregion_ncg.py",
        "scipy/optimize/_tstutils.py",
        "scipy/optimize/cobyla.py",
        "scipy/optimize/cython_optimize/__init__.py",
        "scipy/optimize/cython_optimize/setup.py",
        "scipy/optimize/lbfgsb.py",
        "scipy/optimize/linesearch.py",
        "scipy/optimize/minpack.py",
        "scipy/optimize/nonlin.py",
        "scipy/optimize/optimize.py",
        "scipy/optimize/setup.py",
        "scipy/optimize/slsqp.py",
        "scipy/optimize/tests/__init__.py",
        "scipy/optimize/tests/test__basinhopping.py",
        "scipy/optimize/tests/test__differential_evolution.py",
        "scipy/optimize/tests/test__dual_annealing.py",
        "scipy/optimize/tests/test__linprog_clean_inputs.py",
        "scipy/optimize/tests/test__numdiff.py",
        "scipy/optimize/tests/test__remove_redundancy.py",
        "scipy/optimize/tests/test__root.py",
        "scipy/optimize/tests/test__shgo.py",
        "scipy/optimize/tests/test__spectral.py",
        "scipy/optimize/tests/test_cobyla.py",
        "scipy/optimize/tests/test_constraint_conversion.py",
        "scipy/optimize/tests/test_constraints.py",
        "scipy/optimize/tests/test_cython_optimize.py",
        "scipy/optimize/tests/test_differentiable_functions.py",
        "scipy/optimize/tests/test_hessian_update_strategy.py",
        "scipy/optimize/tests/test_lbfgsb_hessinv.py",
        "scipy/optimize/tests/test_lbfgsb_setulb.py",
        "scipy/optimize/tests/test_least_squares.py",
        "scipy/optimize/tests/test_linear_assignment.py",
        "scipy/optimize/tests/test_linesearch.py",
        "scipy/optimize/tests/test_linprog.py",
        "scipy/optimize/tests/test_lsq_common.py",
        "scipy/optimize/tests/test_lsq_linear.py",
        "scipy/optimize/tests/test_minimize_constrained.py",
        "scipy/optimize/tests/test_minpack.py",
        "scipy/optimize/tests/test_nnls.py",
        "scipy/optimize/tests/test_nonlin.py",
        "scipy/optimize/tests/test_optimize.py",
        "scipy/optimize/tests/test_quadratic_assignment.py",
        "scipy/optimize/tests/test_regression.py",
        "scipy/optimize/tests/test_slsqp.py",
        "scipy/optimize/tests/test_tnc.py",
        "scipy/optimize/tests/test_trustregion.py",
        "scipy/optimize/tests/test_trustregion_exact.py",
        "scipy/optimize/tests/test_trustregion_krylov.py",
        "scipy/optimize/tests/test_zeros.py",
        "scipy/optimize/tnc.py",
        "scipy/optimize/zeros.py",
        "scipy/setup.py",
        "scipy/signal/__init__.py",
        "scipy/signal/_arraytools.py",
        "scipy/signal/_max_len_seq.py",
        "scipy/signal/_max_len_seq_inner.py",
        "scipy/signal/_peak_finding.py",
        "scipy/signal/_savitzky_golay.py",
        "scipy/signal/_spectral.py",
        "scipy/signal/_upfirdn.py",
        "scipy/signal/bsplines.py",
        "scipy/signal/filter_design.py",
        "scipy/signal/fir_filter_design.py",
        "scipy/signal/lti_conversion.py",
        "scipy/signal/ltisys.py",
        "scipy/signal/setup.py",
        "scipy/signal/signaltools.py",
        "scipy/signal/spectral.py",
        "scipy/signal/tests/__init__.py",
        "scipy/signal/tests/mpsig.py",
        "scipy/signal/tests/test_array_tools.py",
        "scipy/signal/tests/test_bsplines.py",
        "scipy/signal/tests/test_cont2discrete.py",
        "scipy/signal/tests/test_dltisys.py",
        "scipy/signal/tests/test_filter_design.py",
        "scipy/signal/tests/test_fir_filter_design.py",
        "scipy/signal/tests/test_ltisys.py",
        "scipy/signal/tests/test_max_len_seq.py",
        "scipy/signal/tests/test_peak_finding.py",
        "scipy/signal/tests/test_result_type.py",
        "scipy/signal/tests/test_savitzky_golay.py",
        "scipy/signal/tests/test_signaltools.py",
        "scipy/signal/tests/test_spectral.py",
        "scipy/signal/tests/test_upfirdn.py",
        "scipy/signal/tests/test_waveforms.py",
        "scipy/signal/tests/test_wavelets.py",
        "scipy/signal/tests/test_windows.py",
        "scipy/signal/waveforms.py",
        "scipy/signal/wavelets.py",
        "scipy/signal/windows/__init__.py",
        "scipy/signal/windows/setup.py",
        "scipy/signal/windows/windows.py",
        "scipy/sparse/__init__.py",
        "scipy/sparse/_index.py",
        "scipy/sparse/_matrix_io.py",
        "scipy/sparse/base.py",
        "scipy/sparse/bsr.py",
        "scipy/sparse/compressed.py",
        "scipy/sparse/construct.py",
        "scipy/sparse/coo.py",
        "scipy/sparse/csc.py",
        "scipy/sparse/csgraph/__init__.py",
        "scipy/sparse/csgraph/_laplacian.py",
        "scipy/sparse/csgraph/_validation.py",
        "scipy/sparse/csgraph/setup.py",
        "scipy/sparse/csgraph/tests/__init__.py",
        "scipy/sparse/csgraph/tests/test_connected_components.py",
        "scipy/sparse/csgraph/tests/test_conversions.py",
        "scipy/sparse/csgraph/tests/test_flow.py",
        "scipy/sparse/csgraph/tests/test_graph_laplacian.py",
        "scipy/sparse/csgraph/tests/test_matching.py",
        "scipy/sparse/csgraph/tests/test_reordering.py",
        "scipy/sparse/csgraph/tests/test_shortest_path.py",
        "scipy/sparse/csgraph/tests/test_spanning_tree.py",
        "scipy/sparse/csgraph/tests/test_traversal.py",
        "scipy/sparse/csr.py",
        "scipy/sparse/data.py",
        "scipy/sparse/dia.py",
        "scipy/sparse/dok.py",
        "scipy/sparse/extract.py",
        "scipy/sparse/generate_sparsetools.py",
        "scipy/sparse/lil.py",
        "scipy/sparse/linalg/__init__.py",
        "scipy/sparse/linalg/_expm_multiply.py",
        "scipy/sparse/linalg/_norm.py",
        "scipy/sparse/linalg/_onenormest.py",
        "scipy/sparse/linalg/dsolve/__init__.py",
        "scipy/sparse/linalg/dsolve/_add_newdocs.py",
        "scipy/sparse/linalg/dsolve/linsolve.py",
        "scipy/sparse/linalg/dsolve/setup.py",
        "scipy/sparse/linalg/dsolve/tests/__init__.py",
        "scipy/sparse/linalg/dsolve/tests/test_linsolve.py",
        "scipy/sparse/linalg/eigen/__init__.py",
        "scipy/sparse/linalg/eigen/_svds.py",
        "scipy/sparse/linalg/eigen/_svds_doc.py",
        "scipy/sparse/linalg/eigen/arpack/__init__.py",
        "scipy/sparse/linalg/eigen/arpack/arpack.py",
        "scipy/sparse/linalg/eigen/arpack/setup.py",
        "scipy/sparse/linalg/eigen/arpack/tests/__init__.py",
        "scipy/sparse/linalg/eigen/arpack/tests/test_arpack.py",
        "scipy/sparse/linalg/eigen/lobpcg/__init__.py",
        "scipy/sparse/linalg/eigen/lobpcg/lobpcg.py",
        "scipy/sparse/linalg/eigen/lobpcg/setup.py",
        "scipy/sparse/linalg/eigen/lobpcg/tests/__init__.py",
        "scipy/sparse/linalg/eigen/lobpcg/tests/test_lobpcg.py",
        "scipy/sparse/linalg/eigen/setup.py",
        "scipy/sparse/linalg/eigen/tests/__init__.py",
        "scipy/sparse/linalg/eigen/tests/test_svds.py",
        "scipy/sparse/linalg/interface.py",
        "scipy/sparse/linalg/isolve/__init__.py",
        "scipy/sparse/linalg/isolve/_gcrotmk.py",
        "scipy/sparse/linalg/isolve/iterative.py",
        "scipy/sparse/linalg/isolve/lgmres.py",
        "scipy/sparse/linalg/isolve/lsmr.py",
        "scipy/sparse/linalg/isolve/lsqr.py",
        "scipy/sparse/linalg/isolve/minres.py",
        "scipy/sparse/linalg/isolve/setup.py",
        "scipy/sparse/linalg/isolve/tests/__init__.py",
        "scipy/sparse/linalg/isolve/tests/demo_lgmres.py",
        "scipy/sparse/linalg/isolve/tests/test_gcrotmk.py",
        "scipy/sparse/linalg/isolve/tests/test_iterative.py",
        "scipy/sparse/linalg/isolve/tests/test_lgmres.py",
        "scipy/sparse/linalg/isolve/tests/test_lsmr.py",
        "scipy/sparse/linalg/isolve/tests/test_lsqr.py",
        "scipy/sparse/linalg/isolve/tests/test_minres.py",
        "scipy/sparse/linalg/isolve/tests/test_utils.py",
        "scipy/sparse/linalg/isolve/utils.py",
        "scipy/sparse/linalg/matfuncs.py",
        "scipy/sparse/linalg/setup.py",
        "scipy/sparse/linalg/tests/__init__.py",
        "scipy/sparse/linalg/tests/test_expm_multiply.py",
        "scipy/sparse/linalg/tests/test_interface.py",
        "scipy/sparse/linalg/tests/test_matfuncs.py",
        "scipy/sparse/linalg/tests/test_norm.py",
        "scipy/sparse/linalg/tests/test_onenormest.py",
        "scipy/sparse/linalg/tests/test_pydata_sparse.py",
        "scipy/sparse/setup.py",
        "scipy/sparse/sparsetools.py",
        "scipy/sparse/spfuncs.py",
        "scipy/sparse/sputils.py",
        "scipy/sparse/tests/__init__.py",
        "scipy/sparse/tests/test_base.py",
        "scipy/sparse/tests/test_construct.py",
        "scipy/sparse/tests/test_csc.py",
        "scipy/sparse/tests/test_csr.py",
        "scipy/sparse/tests/test_extract.py",
        "scipy/sparse/tests/test_matrix_io.py",
        "scipy/sparse/tests/test_sparsetools.py",
        "scipy/sparse/tests/test_spfuncs.py",
        "scipy/sparse/tests/test_sputils.py",
        "scipy/spatial/__init__.py",
        "scipy/spatial/_geometric_slerp.py",
        "scipy/spatial/_plotutils.py",
        "scipy/spatial/_procrustes.py",
        "scipy/spatial/_spherical_voronoi.py",
        "scipy/spatial/distance.py",
        "scipy/spatial/kdtree.py",
        "scipy/spatial/setup.py",
        "scipy/spatial/tests/__init__.py",
        "scipy/spatial/tests/test__plotutils.py",
        "scipy/spatial/tests/test__procrustes.py",
        "scipy/spatial/tests/test_distance.py",
        "scipy/spatial/tests/test_hausdorff.py",
        "scipy/spatial/tests/test_kdtree.py",
        "scipy/spatial/tests/test_qhull.py",
        "scipy/spatial/tests/test_slerp.py",
        "scipy/spatial/tests/test_spherical_voronoi.py",
        "scipy/spatial/transform/__init__.py",
        "scipy/spatial/transform/_rotation_groups.py",
        "scipy/spatial/transform/_rotation_spline.py",
        "scipy/spatial/transform/setup.py",
        "scipy/spatial/transform/tests/__init__.py",
        "scipy/spatial/transform/tests/test_rotation.py",
        "scipy/spatial/transform/tests/test_rotation_groups.py",
        "scipy/spatial/transform/tests/test_rotation_spline.py",
        "scipy/special/__init__.py",
        "scipy/special/_basic.py",
        "scipy/special/_ellip_harm.py",
        "scipy/special/_generate_pyx.py",
        "scipy/special/_lambertw.py",
        "scipy/special/_logsumexp.py",
        "scipy/special/_mptestutils.py",
        "scipy/special/_precompute/__init__.py",
        "scipy/special/_precompute/cosine_cdf.py",
        "scipy/special/_precompute/expn_asy.py",
        "scipy/special/_precompute/gammainc_asy.py",
        "scipy/special/_precompute/gammainc_data.py",
        "scipy/special/_precompute/lambertw.py",
        "scipy/special/_precompute/loggamma.py",
        "scipy/special/_precompute/setup.py",
        "scipy/special/_precompute/struve_convergence.py",
        "scipy/special/_precompute/utils.py",
        "scipy/special/_precompute/wright_bessel.py",
        "scipy/special/_precompute/wright_bessel_data.py",
        "scipy/special/_precompute/wrightomega.py",
        "scipy/special/_precompute/zetac.py",
        "scipy/special/_spherical_bessel.py",
        "scipy/special/_testutils.py",
        "scipy/special/add_newdocs.py",
        "scipy/special/basic.py",
        "scipy/special/orthogonal.py",
        "scipy/special/setup.py",
        "scipy/special/sf_error.py",
        "scipy/special/spfun_stats.py",
        "scipy/special/tests/__init__.py",
        "scipy/special/tests/test_basic.py",
        "scipy/special/tests/test_bdtr.py",
        "scipy/special/tests/test_boxcox.py",
        "scipy/special/tests/test_cdflib.py",
        "scipy/special/tests/test_cosine_distr.py",
        "scipy/special/tests/test_cython_special.py",
        "scipy/special/tests/test_data.py",
        "scipy/special/tests/test_digamma.py",
        "scipy/special/tests/test_ellip_harm.py",
        "scipy/special/tests/test_erfinv.py",
        "scipy/special/tests/test_exponential_integrals.py",
        "scipy/special/tests/test_faddeeva.py",
        "scipy/special/tests/test_gamma.py",
        "scipy/special/tests/test_gammainc.py",
        "scipy/special/tests/test_hypergeometric.py",
        "scipy/special/tests/test_kolmogorov.py",
        "scipy/special/tests/test_lambertw.py",
        "scipy/special/tests/test_log_softmax.py",
        "scipy/special/tests/test_loggamma.py",
        "scipy/special/tests/test_logit.py",
        "scipy/special/tests/test_logsumexp.py",
        "scipy/special/tests/test_mpmath.py",
        "scipy/special/tests/test_nan_inputs.py",
        "scipy/special/tests/test_ndtr.py",
        "scipy/special/tests/test_ndtri_exp.py",
        "scipy/special/tests/test_orthogonal.py",
        "scipy/special/tests/test_orthogonal_eval.py",
        "scipy/special/tests/test_owens_t.py",
        "scipy/special/tests/test_pcf.py",
        "scipy/special/tests/test_pdtr.py",
        "scipy/special/tests/test_precompute_expn_asy.py",
        "scipy/special/tests/test_precompute_gammainc.py",
        "scipy/special/tests/test_precompute_utils.py",
        "scipy/special/tests/test_round.py",
        "scipy/special/tests/test_sf_error.py",
        "scipy/special/tests/test_sici.py",
        "scipy/special/tests/test_spence.py",
        "scipy/special/tests/test_spfun_stats.py",
        "scipy/special/tests/test_sph_harm.py",
        "scipy/special/tests/test_spherical_bessel.py",
        "scipy/special/tests/test_trig.py",
        "scipy/special/tests/test_wright_bessel.py",
        "scipy/special/tests/test_wrightomega.py",
        "scipy/special/tests/test_zeta.py",
        "scipy/special/utils/convert.py",
        "scipy/special/utils/datafunc.py",
        "scipy/special/utils/makenpz.py",
        "scipy/stats/__init__.py",
        "scipy/stats/_binned_statistic.py",
        "scipy/stats/_binomtest.py",
        "scipy/stats/_boost/__init__.py",
        "scipy/stats/_boost/include/_info.py",
        "scipy/stats/_boost/include/code_gen.py",
        "scipy/stats/_boost/include/gen_func_defs_pxd.py",
        "scipy/stats/_boost/setup.py",
        "scipy/stats/_bootstrap.py",
        "scipy/stats/_common.py",
        "scipy/stats/_constants.py",
        "scipy/stats/_continuous_distns.py",
        "scipy/stats/_crosstab.py",
        "scipy/stats/_discrete_distns.py",
        "scipy/stats/_distn_infrastructure.py",
        "scipy/stats/_distr_params.py",
        "scipy/stats/_entropy.py",
        "scipy/stats/_generate_pyx.py",
        "scipy/stats/_hypotests.py",
        "scipy/stats/_hypotests_pythran.py",
        "scipy/stats/_ksstats.py",
        "scipy/stats/_mannwhitneyu.py",
        "scipy/stats/_multivariate.py",
        "scipy/stats/_page_trend_test.py",
        "scipy/stats/_qmc.py",
        "scipy/stats/_relative_risk.py",
        "scipy/stats/_result_classes.py",
        "scipy/stats/_rvs_sampling.py",
        "scipy/stats/_stats_mstats_common.py",
        "scipy/stats/_tukeylambda_stats.py",
        "scipy/stats/_wilcoxon_data.py",
        "scipy/stats/contingency.py",
        "scipy/stats/distributions.py",
        "scipy/stats/kde.py",
        "scipy/stats/morestats.py",
        "scipy/stats/mstats.py",
        "scipy/stats/mstats_basic.py",
        "scipy/stats/mstats_extras.py",
        "scipy/stats/qmc.py",
        "scipy/stats/setup.py",
        "scipy/stats/stats.py",
        "scipy/stats/tests/__init__.py",
        "scipy/stats/tests/common_tests.py",
        "scipy/stats/tests/studentized_range_mpmath_ref.py",
        "scipy/stats/tests/test_binned_statistic.py",
        "scipy/stats/tests/test_bootstrap.py",
        "scipy/stats/tests/test_contingency.py",
        "scipy/stats/tests/test_continuous_basic.py",
        "scipy/stats/tests/test_crosstab.py",
        "scipy/stats/tests/test_discrete_basic.py",
        "scipy/stats/tests/test_discrete_distns.py",
        "scipy/stats/tests/test_distributions.py",
        "scipy/stats/tests/test_entropy.py",
        "scipy/stats/tests/test_fit.py",
        "scipy/stats/tests/test_hypotests.py",
        "scipy/stats/tests/test_kdeoth.py",
        "scipy/stats/tests/test_morestats.py",
        "scipy/stats/tests/test_mstats_basic.py",
        "scipy/stats/tests/test_mstats_extras.py",
        "scipy/stats/tests/test_multivariate.py",
        "scipy/stats/tests/test_qmc.py",
        "scipy/stats/tests/test_rank.py",
        "scipy/stats/tests/test_relative_risk.py",
        "scipy/stats/tests/test_stats.py",
        "scipy/stats/tests/test_tukeylambda_stats.py"
    ],
    "cells": [
        {
            "src": 46,
            "dest": 14,
            "values": {
                "type-use": 11.0
            }
        },
        {
            "src": 41,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 51,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 70,
            "dest": 71,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 64,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 58,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 91,
            "dest": 92,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 82,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 114,
            "dest": 115,
            "values": {
                "type-use": 6.0
            }
        },
        {
            "src": 118,
            "dest": 110,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 120,
            "dest": 110,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 122,
            "dest": 13,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 97,
            "dest": 440,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 104,
            "dest": 110,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 108,
            "dest": 441,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 108,
            "dest": 99,
            "values": {
                "type-use": 7.0
            }
        },
        {
            "src": 108,
            "dest": 101,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 96,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 132,
            "dest": 124,
            "values": {
                "type-use": 36.0
            }
        },
        {
            "src": 135,
            "dest": 536,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 135,
            "dest": 134,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 140,
            "dest": 125,
            "values": {
                "type-use": 24.0
            }
        },
        {
            "src": 140,
            "dest": 134,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 140,
            "dest": 126,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 141,
            "dest": 124,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 142,
            "dest": 139,
            "values": {
                "type-use": 58.0
            }
        },
        {
            "src": 142,
            "dest": 124,
            "values": {
                "type-use": 50.0
            }
        },
        {
            "src": 144,
            "dest": 538,
            "values": {
                "type-use": 8.0
            }
        },
        {
            "src": 145,
            "dest": 134,
            "values": {
                "type-use": 160.0
            }
        },
        {
            "src": 145,
            "dest": 126,
            "values": {
                "type-use": 5.0
            }
        },
        {
            "src": 145,
            "dest": 125,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 145,
            "dest": 135,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 145,
            "dest": 124,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 146,
            "dest": 135,
            "values": {
                "type-use": 4.0
            }
        },
        {
            "src": 148,
            "dest": 136,
            "values": {
                "type-use": 29.0
            }
        },
        {
            "src": 148,
            "dest": 126,
            "values": {
                "type-use": 18.0
            }
        },
        {
            "src": 149,
            "dest": 137,
            "values": {
                "type-use": 13.0
            }
        },
        {
            "src": 150,
            "dest": 657,
            "values": {
                "type-use": 16.0
            }
        },
        {
            "src": 150,
            "dest": 536,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 129,
            "dest": 537,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 124,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 124,
            "dest": 126,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 154,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 161,
            "dest": 160,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 164,
            "dest": 160,
            "values": {
                "type-use": 5.0
            }
        },
        {
            "src": 165,
            "dest": 440,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 169,
            "dest": 167,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 170,
            "dest": 167,
            "values": {
                "type-use": 28.0
            }
        },
        {
            "src": 171,
            "dest": 167,
            "values": {
                "type-use": 30.0
            }
        },
        {
            "src": 172,
            "dest": 167,
            "values": {
                "type-use": 7.0
            }
        },
        {
            "src": 177,
            "dest": 167,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 177,
            "dest": 441,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 177,
            "dest": 440,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 177,
            "dest": 456,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 178,
            "dest": 175,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 167,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 184,
            "dest": 440,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 188,
            "dest": 153,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 190,
            "dest": 456,
            "values": {
                "type-use": 7.0
            }
        },
        {
            "src": 190,
            "dest": 440,
            "values": {
                "type-use": 8.0
            }
        },
        {
            "src": 190,
            "dest": 459,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 191,
            "dest": 185,
            "values": {
                "type-use": 7.0
            }
        },
        {
            "src": 192,
            "dest": 456,
            "values": {
                "type-use": 4.0
            }
        },
        {
            "src": 152,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 220,
            "dest": 23,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 240,
            "dest": 204,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 240,
            "dest": 441,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 207,
            "dest": 441,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 195,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 248,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 255,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 277,
            "dest": 278,
            "values": {
                "type-use": 22.0
            }
        },
        {
            "src": 280,
            "dest": 278,
            "values": {
                "type-use": 45.0
            }
        },
        {
            "src": 274,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 348,
            "dest": 350,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 350,
            "dest": 284,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 365,
            "dest": 283,
            "values": {
                "type-use": 10.0
            }
        },
        {
            "src": 364,
            "dest": 377,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 364,
            "dest": 283,
            "values": {
                "type-use": 4.0
            }
        },
        {
            "src": 367,
            "dest": 284,
            "values": {
                "type-use": 25.0
            }
        },
        {
            "src": 367,
            "dest": 288,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 367,
            "dest": 456,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 368,
            "dest": 288,
            "values": {
                "type-use": 6.0
            }
        },
        {
            "src": 371,
            "dest": 462,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 374,
            "dest": 462,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 377,
            "dest": 283,
            "values": {
                "type-use": 8.0
            }
        },
        {
            "src": 380,
            "dest": 349,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 384,
            "dest": 283,
            "values": {
                "type-use": 4.0
            }
        },
        {
            "src": 387,
            "dest": 339,
            "values": {
                "type-use": 7.0
            }
        },
        {
            "src": 389,
            "dest": 392,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 354,
            "dest": 350,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 354,
            "dest": 282,
            "values": {
                "type-use": 6.0
            }
        },
        {
            "src": 355,
            "dest": 285,
            "values": {
                "type-use": 50.0
            }
        },
        {
            "src": 355,
            "dest": 283,
            "values": {
                "type-use": 41.0
            }
        },
        {
            "src": 356,
            "dest": 286,
            "values": {
                "type-use": 6.0
            }
        },
        {
            "src": 357,
            "dest": 299,
            "values": {
                "type-use": 13.0
            }
        },
        {
            "src": 391,
            "dest": 392,
            "values": {
                "type-use": 15.0
            }
        },
        {
            "src": 282,
            "dest": 350,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 283,
            "dest": 284,
            "values": {
                "type-use": 4.0
            }
        },
        {
            "src": 284,
            "dest": 456,
            "values": {
                "type-use": 8.0
            }
        },
        {
            "src": 284,
            "dest": 288,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 285,
            "dest": 23,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 285,
            "dest": 657,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 285,
            "dest": 350,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 286,
            "dest": 350,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 293,
            "dest": 299,
            "values": {
                "type-use": 6.0
            }
        },
        {
            "src": 295,
            "dest": 350,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 296,
            "dest": 350,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 297,
            "dest": 350,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 298,
            "dest": 350,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 299,
            "dest": 456,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 310,
            "dest": 283,
            "values": {
                "type-use": 4.0
            }
        },
        {
            "src": 312,
            "dest": 440,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 315,
            "dest": 350,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 317,
            "dest": 657,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 317,
            "dest": 350,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 317,
            "dest": 319,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 317,
            "dest": 538,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 320,
            "dest": 350,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 323,
            "dest": 350,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 325,
            "dest": 456,
            "values": {
                "type-use": 11.0
            }
        },
        {
            "src": 327,
            "dest": 284,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 327,
            "dest": 283,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 327,
            "dest": 350,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 328,
            "dest": 441,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 328,
            "dest": 489,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 329,
            "dest": 441,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 333,
            "dest": 283,
            "values": {
                "type-use": 18.0
            }
        },
        {
            "src": 334,
            "dest": 441,
            "values": {
                "type-use": 5.0
            }
        },
        {
            "src": 335,
            "dest": 441,
            "values": {
                "type-use": 26.0
            }
        },
        {
            "src": 336,
            "dest": 283,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 337,
            "dest": 456,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 281,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 405,
            "dest": 134,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 413,
            "dest": 409,
            "values": {
                "type-use": 18.0
            }
        },
        {
            "src": 413,
            "dest": 405,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 414,
            "dest": 405,
            "values": {
                "type-use": 26.0
            }
        },
        {
            "src": 417,
            "dest": 405,
            "values": {
                "type-use": 27.0
            }
        },
        {
            "src": 422,
            "dest": 405,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 393,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 436,
            "dest": 441,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 436,
            "dest": 456,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 438,
            "dest": 458,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 439,
            "dest": 438,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 440,
            "dest": 441,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 440,
            "dest": 456,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 440,
            "dest": 459,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 441,
            "dest": 456,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 448,
            "dest": 456,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 449,
            "dest": 441,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 449,
            "dest": 456,
            "values": {
                "type-use": 9.0
            }
        },
        {
            "src": 451,
            "dest": 456,
            "values": {
                "type-use": 11.0
            }
        },
        {
            "src": 452,
            "dest": 456,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 452,
            "dest": 441,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 452,
            "dest": 440,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 453,
            "dest": 456,
            "values": {
                "type-use": 4.0
            }
        },
        {
            "src": 453,
            "dest": 441,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 453,
            "dest": 462,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 454,
            "dest": 456,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 442,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 456,
            "dest": 462,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 456,
            "dest": 441,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 458,
            "dest": 440,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 459,
            "dest": 440,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 472,
            "dest": 441,
            "values": {
                "type-use": 22.0
            }
        },
        {
            "src": 472,
            "dest": 456,
            "values": {
                "type-use": 6.0
            }
        },
        {
            "src": 467,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 477,
            "dest": 478,
            "values": {
                "type-use": 21.0
            }
        },
        {
            "src": 477,
            "dest": 489,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 477,
            "dest": 18,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 480,
            "dest": 441,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 480,
            "dest": 489,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 485,
            "dest": 489,
            "values": {
                "type-use": 5.0
            }
        },
        {
            "src": 481,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 488,
            "dest": 441,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 488,
            "dest": 456,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 474,
            "dest": 489,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 473,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 499,
            "dest": 489,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 500,
            "dest": 456,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 500,
            "dest": 489,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 501,
            "dest": 489,
            "values": {
                "type-use": 6.0
            }
        },
        {
            "src": 501,
            "dest": 456,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 502,
            "dest": 456,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 502,
            "dest": 489,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 504,
            "dest": 440,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 490,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 512,
            "dest": 489,
            "values": {
                "type-use": 9.0
            }
        },
        {
            "src": 513,
            "dest": 441,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 513,
            "dest": 508,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 514,
            "dest": 456,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 514,
            "dest": 437,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 514,
            "dest": 440,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 514,
            "dest": 441,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 514,
            "dest": 458,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 514,
            "dest": 459,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 514,
            "dest": 462,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 463,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 522,
            "dest": 437,
            "values": {
                "type-use": 24.0
            }
        },
        {
            "src": 522,
            "dest": 456,
            "values": {
                "type-use": 44.0
            }
        },
        {
            "src": 522,
            "dest": 441,
            "values": {
                "type-use": 27.0
            }
        },
        {
            "src": 522,
            "dest": 462,
            "values": {
                "type-use": 22.0
            }
        },
        {
            "src": 522,
            "dest": 459,
            "values": {
                "type-use": 11.0
            }
        },
        {
            "src": 522,
            "dest": 440,
            "values": {
                "type-use": 16.0
            }
        },
        {
            "src": 522,
            "dest": 458,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 523,
            "dest": 440,
            "values": {
                "type-use": 13.0
            }
        },
        {
            "src": 523,
            "dest": 456,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 524,
            "dest": 441,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 524,
            "dest": 462,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 525,
            "dest": 456,
            "values": {
                "type-use": 4.0
            }
        },
        {
            "src": 527,
            "dest": 441,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 527,
            "dest": 459,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 528,
            "dest": 456,
            "values": {
                "type-use": 4.0
            }
        },
        {
            "src": 528,
            "dest": 440,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 528,
            "dest": 458,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 528,
            "dest": 437,
            "values": {
                "type-use": 4.0
            }
        },
        {
            "src": 529,
            "dest": 456,
            "values": {
                "type-use": 8.0
            }
        },
        {
            "src": 433,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 537,
            "dest": 538,
            "values": {
                "type-use": 12.0
            }
        },
        {
            "src": 544,
            "dest": 537,
            "values": {
                "type-use": 6.0
            }
        },
        {
            "src": 544,
            "dest": 536,
            "values": {
                "type-use": 5.0
            }
        },
        {
            "src": 544,
            "dest": 538,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 545,
            "dest": 538,
            "values": {
                "type-use": 52.0
            }
        },
        {
            "src": 545,
            "dest": 536,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 547,
            "dest": 535,
            "values": {
                "type-use": 25.0
            }
        },
        {
            "src": 540,
            "dest": 538,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 553,
            "dest": 551,
            "values": {
                "type-use": 90.0
            }
        },
        {
            "src": 554,
            "dest": 551,
            "values": {
                "type-use": 8.0
            }
        },
        {
            "src": 554,
            "dest": 536,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 555,
            "dest": 551,
            "values": {
                "type-use": 4.0
            }
        },
        {
            "src": 555,
            "dest": 550,
            "values": {
                "type-use": 4.0
            }
        },
        {
            "src": 550,
            "dest": 134,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 548,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 535,
            "dest": 538,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 531,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 586,
            "dest": 581,
            "values": {
                "type-use": 21.0
            }
        },
        {
            "src": 611,
            "dest": 581,
            "values": {
                "type-use": 66.0
            }
        },
        {
            "src": 612,
            "dest": 578,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 556,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 684,
            "dest": 647,
            "values": {
                "type-use": 12.0
            }
        },
        {
            "src": 688,
            "dest": 666,
            "values": {
                "type-use": 28.0
            }
        },
        {
            "src": 690,
            "dest": 673,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 692,
            "dest": 655,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 693,
            "dest": 657,
            "values": {
                "type-use": 50.0
            }
        },
        {
            "src": 696,
            "dest": 660,
            "values": {
                "type-use": 8.0
            }
        },
        {
            "src": 696,
            "dest": 657,
            "values": {
                "type-use": 6.0
            }
        },
        {
            "src": 644,
            "dest": 647,
            "values": {
                "type-use": 16.0
            }
        },
        {
            "src": 644,
            "dest": 134,
            "values": {
                "type-use": 5.0
            }
        },
        {
            "src": 644,
            "dest": 124,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 645,
            "dest": 440,
            "values": {
                "type-use": 2.0
            }
        },
        {
            "src": 646,
            "dest": 134,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 660,
            "dest": 126,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 633,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 1,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 35,
            "dest": 13,
            "values": {
                "type-use": 3.0
            }
        },
        {
            "src": 32,
            "dest": 18,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 33,
            "dest": 23,
            "values": {
                "type-use": 4.0
            }
        },
        {
            "src": 16,
            "dest": 10,
            "values": {
                "type-use": 46.0
            }
        },
        {
            "src": 10,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        },
        {
            "src": 0,
            "dest": 17,
            "values": {
                "type-use": 1.0
            }
        }
    ]
}